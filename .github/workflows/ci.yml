name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        deno: [canary]
        os:
          - ${{ github.repository_owner == 'stephenmelnicki' && 'ubuntu-22.04' }}
          - windows-2022
          - macOS-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ matrix.deno }}

      - name: Run tests canary
        run: deno task test

      - name: Generate lcov
        shell: bash
        run: deno coverage ./cov/ --lcov > cov.lcov
          
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        if: |
          !startsWith(matrix.os, 'ubuntu')
        with:
          name: ${{ matrix.os }}-${{ matrix.deno }}
          files: cov.lcov

      - name: Remove coverage report
        shell: bash
        if: |
          !startsWith(matrix.os, 'ubuntu')
        run: |
          rm -rf ./cov/
          rm cov.lcov

  lint:
    runs-on: ${{ github.repository_owner == 'stephenmelnicki' && 'ubuntu-22.04' }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          submodules: false
          persist-credentials: false

      - name: Set up Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: canary

      - name: Format
        run: deno fmt --check

      - name: Lint
        run: deno lint
